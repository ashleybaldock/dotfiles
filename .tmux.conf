
## Keybinds

unbind C-b
set-option -g prefix C-a
set-option -g prefix2 §
bind-key C-a send-prefix
bind-key § send-prefix -2

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "$HOME/projects/" \; \
     split-window -f -c "$HOME/projects/" \; \
     split-window -h -f -c "$HOME/projects/" \; \
     split-window -c "$HOME/projects/"
bind -n C-t new-window -a
bind , command-prompt "rename-window '%%'"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Reload tmux configuration 
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session


## Settings

set -g default-terminal "screen-256color"

setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on

# Set parent terminal title to reflect current window in tmux session 
set -g set-titles on
set -g set-titles-string "#I:#W"

set -g base-index 1
setw -g pane-base-index 1
setw -g mode-keys vi

set-option -g mouse on

set -g escape-time 20

if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'


## Theme
c_dark=c232          #080808
c_light=c255         #eeeeee
c_session=c255       #eeeeee
c_inactive=c245      #8a8a8a
c_main=c2            #008000
c_bg=c22             #005f00
c_secondary=c255     #eeeeee

c_keys_off=c088      #870000
c_off_status_bg=c238 #444444
c_off_status_current_bg=c254 #e4e4e4

#   22 #005f00  28 #008700  34 #00af00  40 #00d700  46 #00ff00
#               64 #5f8700  70 #5faf00  76 #5fd700  82 #5fff00
#     Greens               106 #87af00 112 #87d700 118 #87ff00
#                                      154 #afff00 155 #afff5f
# 0,16 #000000   2 #008000                         155 #d7ff5f

set -g mode-style "fg=default,bg=$c_main"

# command line style
set -g message-style "fg=$c_main,bg=$c_dark"

# status line style
set -g status-style "fg=$c_secondary,bg=$c_bg"

# Status line - windows
setw -g window-status-format "╲⃟︎ ╲⃘︎ ╲⃤︎ ╲⃠︎ ╲꛰︎ ╲⃝︎  ╲⃞︎ ╎⃥︎╲⃣︎ ╲ ╲͟︎  ╲̲̳ ╲͢︎ ╲͐︎ ╲⃑︎   ╲⃛︎ ╲⃨︎ ╲⃨⃛ ╲ ╲ ╲"
setw -g window-status-format "╲̻ ╲̺ ╲͍ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲⃜︎ ╲⃨︎ ╲⃛︎ ╲⃨⃛ ╲"

setw -g window-status-format "╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲"
setw -g window-status-format "❯#I:❮ ╲̶̅ ╲̵̲ ╲⃪︎╲̶╲̵ ╲⃪︎ ╲̴ ╲̷̵ ╲̸̶ ╲⃫︎ ╲⃓︎ ╲⃒︎ ╲⃦︎ ╲⃥︎ ╲̄︎ ╲͞︎ ╲̅︎ ╲̿︎  "
setw -g window-status-format "❯#I:❮  ╲̶̲ ╲̵̅ ╲⃪︎╲̶╲̵ ╲⃪︎ ╲̴ ╲̷̶ ╲̸̵ ╲⃫︎ ╲⃓︎ ╲⃒︎ ╲⃦︎ ╲⃥︎ ╲̄︎ ╲͞︎ ╲̅︎ ╲̿︎   "
setw -g window-status-format "❯#I:#W❮ ╲̶̅ ╲̵̲ ╲⃪︎ ╲̶ ╲̵ ╲⃪︎ ╲̴ ╲̷̵ ╲̸̶ ╲⃫︎ ╲⃓︎ ╲⃒︎ ╲⃦︎ ╲⃥︎ ╲̄︎ ╲͞︎ ╲̅︎ ╲̿︎  "
setw -g window-status-format "❯#I:#W❮  ╲̶̲ ╲̵̅ ╲⃪︎ ╲̶ ╲̵ ╲⃪︎ ╲̴ ╲̷̶ ╲̸̵ ╲⃫︎ ╲⃓︎ ╲⃒︎ ╲⃦︎ ╲⃥︎ ╲̄︎ ╲͞︎ ╲̅︎ ╲̿︎   "
setw -g window-status-format " #I #W "

set -g window-status-current-style "#[fg=$c_light,bg=$c_main]"
setw -g window-status-current-format "#[fg=$c_light,bg=$c_main]╸#I:#W╺"
setw -g window-status-current-format "#[fg=$c_light,bg=$c_main][️#I:#W]️"

setw -g window-status-current-format "#[fg=$c_light,bg=$c_main]╲̸̶(️#I)️#W "
setw -g window-status-current-format "#[fg=$c_light,bg=$c_main]#I𛰙╲̸̶𛰚#W "

setw -g window-status-format "#[fg=c28,bg=$c_main]╲#I #W "
setw -g window-status-current-format "#[fg=c28,bg=c40]╲̸̶#[fg=$c_light,bg=$c_main]#I #W "

set -g window-status-activity-style
set -g window-status-bell-style

set -g window-status-last-style "[fg=#cccccc]"
set -g window-status-separator ' ' 
set -g window-status-separator "│"
set -g window-status-separator ""
set -g window-status-style "[fg=#aaaaaa]"

set -g pane-border-indicators c
set -g pane-border-lines single
set -g pane-border-style fg=$c_inactive
# set -g pane-border-format "──❨#{pane_index}❩──[ #{=|-32|…;s|$HOME|~|:pane_current_path}/ ]───────(#{pane_title})───"
set -g pane-border-format "╌(️ #{pane_index} )️╌(️ #{pane_title} )️╌"
set -g pane-border-status bottom
# outline for active pane
setw -g pane-active-border-style "fg=$c_main"

# set -g copy-mode-position-format
# set -g copy-mode-position-style
# set -g copy-mode-selection-style
# set -g mode-style style


# when window has monitoring notification
setw -g window-status-activity-style "fg=$c_main"




## Status bar
# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100

# define widgets we're going to use in status bar
wg_session="#[fg=$c_session] #S #[default]"
wg_date="#[fg=$c_secondary]%h %d %H:%M#[default]"
wg_host="#[fg=$c_secondary]#(whoami)@#h#[default]"
wg_is_zoomed="#[fg=$c_dark,bg=$c_secondary]#{?window_zoomed_flag,[Z],}#[default]#{?window_zoomed_flag, ,}"
wg_is_keys_off="#[fg=$c_light,bg=$c_keys_off]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]#([ $(tmux show-option -qv key-table) = 'off' ] && echo ' ')"
wg_prefix="#{?client_prefix,#[reverse]<Prefix>#[noreverse], }#[default]#{?client_prefix, , }"

set -g status-left "$wg_session"
set -g status-right "$wg_prefix$wg_is_keys_off$wg_is_zoomed $wg_host | $wg_date "

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$c_dark"
set -g @prefix_highlight_bg "$c_secondary"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$c_dark,bg=$c_secondary"


## Nested sessions

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux/tmux.remote.conf'

# Shift+Up/Shift+Down to switch active tmux when nesting
# http://stahlke.org/dan/tmux-nested/
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$c_inactive,bg=$c_off_status_bg" \;\
  set window-status-current-format "#[fg=$c_off_status_bg,bg=$c_off_status_current_bg]$separator_powerline_right#[default] #I:#W #[fg=$c_off_status_current_bg,bg=$c_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$c_dark,bold,bg=$c_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S



run-shell ~/.tmux.plugins/tmux-resurrect/resurrect.tmux
