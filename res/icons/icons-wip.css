/* icons.css | http://localhost:3333/icons/icons.css */

:is(section, .svgListing),
:is(section, .svgListing):has(> h2) {
  /* container-type: size; */
  /* contain: size; */
}

body {
  /* grid-template-columns: repeat(auto-fit, [item-start]var(--item-size) [item-end]) [label-start]auto[label-end]; */
}

.iconRow {
  /* box-shadow: calc(var(--item-gap) * 1) calc(var(--item-gap) * 2) 0 calc(var(--item-gap) * 2) #222; */
  inset: 0 auto;
}

/* Inline | http://localhost:3333/icons/icons.html */

.iconRow:nth-child(6n + 1) {
  inset: 10vh auto;
}

.iconRow:nth-child(6n + 0) {
  inset: -1vh auto;
}
.iconRow:nth-child(6n + 1) {
  inset: 5vh auto;
}
.iconRow:nth-child(6n + 2) {
  inset: 1vh auto;
}
.iconRow:nth-child(6n + 3) {
  inset: 2vh auto;
}
.iconRow:nth-child(6n + 4) {
  inset: 4vh auto;
}
.iconRow:nth-child(6n + 5) {
  inset: 3vh auto;
}
.iconRow,
.iconRow .wrappedSVG,
.inner::before {
  background-color: #0000;
  box-shadow: 0 0 0 0 #0000;
}
o








Inline | http://localhost:3333/icons/icons.html */

/* .iconRow:nth-child(6n+1) {
  inset: 10vh auto;
} */

.iconRow:last-child:nth-child(odd) {
  --i1: 1;
}
.iconRow:nth-child(2n):not(:nth-child(4n)) {
  --i2: 1;
}
.iconRow:nth-child(4n) {
  --i4: 1;
}
.iconRow:nth-child(8n) {
  --i8: 1;
}
.iconRow:nth-child(16n) {
  --i16: 1;
}
.iconRow:nth-child(16n) {
  --i32: 1;
}
.iconRow {
  --ix: calc(
    (1 * var(--i1, 0)) + (2 * var(--i2, 0)) + (4 * var(--i4, 0)) +
      (8 * var(--i8, 0)) + (16 * var(--i16, 0)) + (32 * var(--i32, 0))
  );
  inset: calc(var(--ix) * 1vw) calc(var(--ix) * 1vw) auto auto;
}
:not(#a#b) .iconRow::after {
  content: 'n=' counter(idx);
  counter-reset: idx var(--ix);
  display: flex;
  position: absolute;
  inset: -10px auto auto -10px;
  z-index: 100000;
}
/* .iconRow:nth-child(6n+2) {
  inset: 1vh 60vw auto auto;
}
.iconRow:nth-child(6n+3) {
  inset: 2vh 70vw auto auto;
}
.iconRow:nth-child(6n+4) {
  inset: 4vh 80vw auto auto;
}
.iconRow:nth-child(6n+5) {
  inset: 3vh 90vw auto auto;
}*/

.iconRow:nth-child(6n) {
  outline: 2px solid red;
}
.iconRow:nth-child(6n + 1) {
  outline: 2px solid orange;
}
.iconRow:nth-child(6n + 2) {
  outline: 2px solid yellow;
}
.iconRow:nth-child(6n + 3) {
  outline: 2px solid green;
}
.iconRow:nth-child(6n + 4) {
  outline: 2px solid blue;
}
.iconRow:nth-child(6n + 5) {
  outline: 2px solid purple;
}

.iconRow,
.iconRow .wrappedSVG,
.inner::before {
  background-color: #0000;
  box-shadow: 0 0 0 0 #0000;
}

.iconRow:nth-child(6n) {
  inset: 2vh 40vw auto auto;
}
/* icons.css | http://localhost:3333/icons/icons.css */

:is(section, .svgListing),
:is(section, .svgListing):has(> h2) {
  container-type: size;
  contain: size;
  grid-template-rows: subgrid 1fr 1fr;
  grid-template-columns: subgrid;
  contain: initial;
  container-type: initial;
  grid-auto-rows: 1fr;
  display: contents;
  grid-area: icons;
}

.iconRow:nth-child(6n + 3) {
  inset: 2vh 50vw auto auto;
}

:not(#a#b) .iconRow::after {
  content: 'n=' counter(idx);
}

.nths {
  grid-row: -1;
  grid-column: 1/-1;
  display: flex;
  flex: 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  justify-content: start;
  width: auto;
}
.nths > [data-nth] {
  display: flex;
  flex: 1 1 auto;
  margin: 0;
}
.nths > [data-nth]::before {
  content: attr(data-nth);
}
.nth {
  position: relative;
  display: grid;
  column-gap: 0;
  grid-template-columns: repeat(10, 1fr);
  padding: 1ch;
  letter-spacing: normal;
  place-items: center;
  flex: 0 0 auto;
  margin: 0 auto 0 0;
}
.nth > ::after {
  inset: auto 0 -0.2lh auto;
  position: absolute;
  font-size: 0.67em;
  display: flex;
  aspect-ratio: 1;
  width: auto;
  height: auto;
}
.nth > div {
  position: relative;
  aspect-ratio: 1;
  display: grid;
  grid-template: 1fr/1fr;
  padding: 0.75ch;
  width: 1lh;
  height: auto;
  place-content: center;
  place-items: center;
}
.nth {
  counter-reset: count;
}
.nth > * {
  counter-increment: count;
}
.nth > *::before {
  content: counter(count);
  grid-column: 1;
  grid-row: 1;
  display: flex;
}

.nth > *::after {
  content: '';
  font-size: 0.4em;
  opacity: 0;
}

.nth > :nth-child(odd):hover,
.nth > :nth-child(odd):hover ~ :nth-child(odd),
.nth > :nth-child(odd):has(~ :nth-child(odd):hover) {
  box-shadow: inset 0 0 4px 0.5px #66d;
}
.nth > :nth-child(odd):hover::after,
.nth > :nth-child(odd):hover ~ :nth-child(odd)::after,
.nth > :nth-child(odd):has(~ :nth-child(odd):hover)::after {
  transform: rotate(-15deg);
  letter-spacing: 0.18ch;
  content: 'odd';
  opacity: 1;
}

.nth > :nth-child(even):hover,
.nth > :nth-child(even):hover ~ :nth-child(even),
.nth > :nth-child(even):has(~ :nth-child(even):hover) {
  box-shadow: inset 0 0 4px 0.5px #d66;
}
.nth > :nth-child(even):hover::after,
.nth > :nth-child(even):hover ~ :nth-child(even)::after,
.nth > :nth-child(even):has(~ :nth-child(even):hover)::after {
  transform: rotate(-15deg) translate(0.1ch, 0.3lh);
  letter-spacing: 0.18ch;
  content: 'even';
  opacity: 1;
}

.nth > :nth-child(2n):hover,
.nth > :nth-child(2n):hover ~ :nth-child(2n),
.nth > :nth-child(2n):has(~ :nth-child(2n):hover) {
  box-shadow: inset 0 0 4px 0.5px #dd6;
}
.nth > :nth-child(2n):hover::after,
.nth > :nth-child(2n):hover ~ :nth-child(2n)::after,
.nth > :nth-child(2n):has(~ :nth-child(2n):hover)::after {
  transform: rotate(-15deg) translate(0.1ch, 0.3lh);
  letter-spacing: 0.18ch;
  content: '2n';
  opacity: 1;
}

.iconRow:last-child:nth-child(odd) {
  --i1: 1;
}
.iconRow:nth-child(-2n):not(:nth-child(4n)) {
  --i2: 1;
}
.iconRow:nth-child(-4n):not(:nth-child(8n)) {
  --i4: 1;
}
.iconRow:nth-child(8n):not(:nth-child(16n)) {
  --i8: 1;
}
.iconRow:nth-child(16n):not(:nth-child(32n)) {
  --i16: 1;
}
.iconRow:nth-child(32n):not(:nth-child(64n)) {
  --i32: 1;
}
.iconRow {
  --ix: calc(
    (1 * var(--i1, 0)) + (2 * var(--i2, 0)) + (4 * var(--i4, 0)) +
      (8 * var(--i8, 0)) + (16 * var(--i16, 0)) + (32 * var(--i32, 0))
  );
  inset: calc(var(--ix) * 1vw) calc(var(--ix) * 1vw) auto auto;
}
:not(#a#b) .iconRow::after {
  content: 'n=' counter(idx);
  counter-reset: idx var(--ix);
  display: flex;
  position: absolute;
  inset: -10px auto auto -10px;
  z-index: 100000;
}
/* .iconRow:nth-child(6n+2) {
  inset: 1vh 60vw auto auto;
}
.iconRow:nth-child(6n+3) {
  inset: 2vh 70vw auto auto;
}
.iconRow:nth-child(6n+4) {
  inset: 4vh 80vw auto auto;
}
.iconRow:nth-child(6n+5) {
  inset: 3vh 90vw auto auto;
}*/

.iconRow:nth-child(6n) {
  outline: 2px solid red;
}
.iconRow:nth-child(6n + 1) {
  outline: 2px solid orange;
}
.iconRow:nth-child(6n + 2) {
  outline: 2px solid yellow;
}
.iconRow:nth-child(6n + 3) {
  outline: 2px solid green;
}
.iconRow:nth-child(6n + 4) {
  outline: 2px solid blue;
}
.iconRow:nth-child(6n + 5) {
  outline: 2px solid purple;
}

.iconRow,
.iconRow .wrappedSVG,
.inner::before {
  background-color: #0000;
  box-shadow: 0 0 0 0 #0000;
}

.iconRow:nth-child(6n) {
  inset: 2vh 40vw auto auto;
}

body {
  column-gap: calc(var(--item-gap) * 8);
  grid-auto-rows: auto;
}

:is(section, .svgListing),
:is(section, .svgListing):has(> h2) {
  display: contents;
  grid-area: icons;
}
